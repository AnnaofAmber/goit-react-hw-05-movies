{"version":3,"file":"static/js/38.159c3ef6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/MovieSearch/MovieSearch.module.css?a4c9","components/MovieSearch/MovieSearch.jsx","pages/Movies/Movies.jsx","pages/api/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loaderWrapper\":\"Loader_loaderWrapper__6ypwD\"};","import { ColorRing } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.loaderWrapper}>\n      <ColorRing\n        visible={true}\n        height=\"120\"\n        width=\"120\"\n        ariaLabel=\"blocks-loading\"\n        colors={['#F99417', '#d2cdfc', '#ffc374', '#d2cdfc', '#F99417']}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoviesList_container__0JGj2\",\"item\":\"MoviesList_item__eePYv\",\"img\":\"MoviesList_img__v4jFC\",\"link\":\"MoviesList_link__8rTGX\",\"title\":\"MoviesList_title__PB2c8\"};","import css from './MoviesList.module.css';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesList = ({ data, location }) => {\n  return (\n    <ul className={css.container}>\n      {data.map(({ title, id, poster_path }) => (\n        <li className={css.item} key={id}>\n          <Link\n            state={{ from: location }}\n            className={css.link}\n            to={`/movies/${id}`}\n          >\n            <img\n              className={css.img}\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                  : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n              }\n              alt={title}\n            />\n            <span className={css.title}>{title}</span>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MovieSearch_form__dggG5\",\"input\":\"MovieSearch_input__ixDAZ\",\"btn\":\"MovieSearch_btn__60jcx\"};","import css from './MovieSearch.module.css';\n\nexport const MovieSearch = ({ handleSubmit }) => {\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label htmlFor=\"movie-input\"></label>\n      <input\n        className={css.input}\n        id=\"movie-input\"\n        name=\"serchMovieName\"\n        type=\"text\"\n        placeholder=\"Enter movie name\"\n      />\n      <button className={css.btn} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n","import Notiflix from 'notiflix';\n\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { MovieSearch } from 'components/MovieSearch/MovieSearch';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { fetchMovieByName } from 'pages/api/api';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [apiError, setApiError] = useState(false);\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      Notiflix.Notify.warning(`Please enter movie name!`);\n      setMoviesList([])\n      return;\n    }\n    const fetchMovie = async () => {\n      try {\n        setIsLoading(true);\n        const result = await fetchMovieByName(query);\n        if (result.length === 0) {\n          Notiflix.Notify.failure(\n            `Oops! Seems like we do not have movie with title ${query}!`\n          );\n        } else {\n          setMoviesList(result);\n        }\n      } catch (error) {\n        setApiError(true);\n        Notiflix.Notify.failure(\n          `Oops! Something went wrong! Error ${apiError} Try reloading the page!`\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [query, apiError]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchValue = e.currentTarget.elements.serchMovieName.value;\n    setSearchParams({ query: searchValue });\n  };\n\n  return (\n    <div>\n      <MovieSearch handleSubmit={handleSubmit} />\n      {isLoading && <Loader />}\n      {moviesList.length !== 0 && (\n        <MoviesList data={moviesList} location={location} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '548e96f0a88257a9c2a7854f478e0cd8';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  const { results } = data;\n  return results;\n};\n\nexport const fetchMovieByID = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const { cast } = data;\n  return cast;\n};\n\nexport const fetchReview = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const { results } = data;\n  return results;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  const { results } = data;\n  return results;\n};\n"],"names":["Loader","className","css","visible","height","width","ariaLabel","colors","MoviesList","data","location","map","title","id","poster_path","state","from","to","src","alt","MovieSearch","handleSubmit","onSubmit","htmlFor","name","type","placeholder","useSearchParams","searchParams","setSearchParams","useLocation","useState","moviesList","setMoviesList","isLoading","setIsLoading","apiError","setApiError","query","get","useEffect","Notiflix","fetchMovie","fetchMovieByName","result","length","e","preventDefault","searchValue","currentTarget","elements","serchMovieName","value","BASE_URL","API_KEY","fetchTrendingMovies","axios","results","fetchMovieByID","movieId","fetchCast","cast","fetchReview"],"sourceRoot":""}