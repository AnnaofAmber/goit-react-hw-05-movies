{"version":3,"file":"static/js/770.5eca353d.chunk.js","mappings":"2NACA,EAAyB,wB,6CCAzB,EAAuB,+BCAvB,GAAgB,KAAO,+BAA+B,OAAS,iCAAiC,KAAO,gC,SCC1FA,EAAmB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACzC,OACE,gBAAIC,UAAWC,EAAAA,KAAf,WACE,eAAGD,UAAWC,EAAAA,KAAd,WACE,iBAAMD,UAAWC,EAAAA,OAAjB,SAA6B,YAAc,IAAEH,MAE/C,cAAGE,UAAWC,EAAAA,OAAd,SAA2BF,MAGhC,ECRYG,EAAmB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjC,OACE,eAAIH,UAAWC,EAAf,SACGE,EAAKC,KAAI,gBAAGC,EAAH,EAAGA,GAAIP,EAAP,EAAOA,OAAQQ,EAAf,EAAeA,QAAf,OACR,SAACT,EAAD,CAA2BC,OAAQA,EAAQC,OAAQO,GAA5BD,EADf,KAKf,E,SC0CD,EA3CiB,WACf,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KA+BA,OA7BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,oGAErBJ,GAAa,GAFQ,UAGAK,EAAAA,EAAAA,IAAYX,GAHZ,UAKA,KAFfY,EAHe,QAKXC,OALW,iDAOS,IAAnBV,EAAQU,QACjBT,EAAWQ,GARQ,0DAiBrBJ,GAAY,GACZM,IAAAA,OAAAA,QAAA,4CACuCP,EADvC,6BAlBqB,yBAsBrBD,GAAa,GAtBQ,6EAAH,qDAyBtBI,GACD,KAGC,2BACGP,EAAQU,OAAO,GAAG,SAAClB,EAAD,CAAkBC,KAAMO,KAAa,gBAAKV,UAAWC,EAAhB,SAA4B,8BACnFW,IAAa,SAACU,EAAA,EAAD,MAGnB,C","sources":["webpack://react-homework-template/./src/pages/Reviews/Reviews.module.css?9a3e","webpack://react-homework-template/./src/components/MovieReviews/MovieReviewsList.module.css?0f7d","webpack://react-homework-template/./src/components/MovieReviews/MovieReviewsItem.module.css?a42a","components/MovieReviews/MovieReviewsItem.jsx","components/MovieReviews/MovieReviewsList.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"review\":\"Reviews_review__g0Nb8\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieReviewsList_list__QOF1x\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieReviewsItem_item__zSxg0\",\"author\":\"MovieReviewsItem_author__g9wCd\",\"name\":\"MovieReviewsItem_name__4Fa9w\"};","import css from './MovieReviewsItem.module.css';\n\nexport const MovieReviewsItem = ({ author, review }) => {\n  return (\n    <li className={css.item}>\n      <p className={css.name}>\n        <span className={css.author}>Author:</span> {author}\n      </p>\n      <p className={css.review}>{review}</p>\n    </li>\n  );\n};\n","import css from './MovieReviewsList.module.css';\nimport { MovieReviewsItem } from './MovieReviewsItem';\n\nexport const MovieReviewsList = ({ data }) => {\n  return (\n    <ul className={css.list}>\n      {data.map(({ id, author, content }) => (\n        <MovieReviewsItem key={id} author={author} review={content} />\n      ))}\n    </ul>\n  );\n};\n","import css from \"./Reviews.module.css\"\nimport { fetchReview } from 'api';\n\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport Notiflix from 'notiflix';\n\nimport { MovieReviewsList } from 'components/MovieReviews/MovieReviewsList';\nimport { Loader } from 'components/Loader/Loader';\n\n const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [apiError, setApiError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieReview = async () => {\n      try {\n        setIsLoading(true);\n        const result = await fetchReview(movieId);\n        \n        if(result.length === 0){\n          return\n        } else if (reviews.length === 0){\n          setReviews(result);\n\n        }\n\n      \n\n          \n\n      } catch (error) {\n        setApiError(true);\n        Notiflix.Notify.failure(\n          `Oops! Something went wrong! Error ${apiError} Try reloading the page!`\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieReview();\n  });\n\n  return (\n    <div>\n      {reviews.length>0? <MovieReviewsList data={reviews}/> : <div className={css.review}>There are no reviews yet!</div>}\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Reviews\n"],"names":["MovieReviewsItem","author","review","className","css","MovieReviewsList","data","map","id","content","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","apiError","setApiError","useEffect","fetchMovieReview","fetchReview","result","length","Notiflix","Loader"],"sourceRoot":""}