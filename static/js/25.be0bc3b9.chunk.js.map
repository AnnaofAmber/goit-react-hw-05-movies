{"version":3,"file":"static/js/25.be0bc3b9.chunk.js","mappings":"sQACA,EAAuB,4BCAvB,GAAgB,KAAO,4BAA4B,IAAM,2BAA2B,KAAO,6B,SCC9EA,EAAgB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC3C,OACE,gBAAIC,UAAWC,EAAAA,KAAf,WACE,gBAAKD,UAAWC,EAAAA,IAASC,IAAKL,EAAOM,IAAKL,KAC1C,iBAAKE,UAAWC,EAAAA,KAAhB,WACE,eAAGD,UAAWC,EAAAA,MAAd,UAAyB,SAAOH,MAChC,eAAGE,UAAWC,EAAAA,KAAd,UAAwB,cAAYF,UAI3C,ECRYK,EAAgB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC9B,OACE,eAAIL,UAAWC,EAAf,SACGI,EAAKC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcV,EAArB,EAAqBA,KAAMW,EAA3B,EAA2BA,UAA3B,OACR,SAACb,EAAD,CAEEC,MACEW,EAAY,0CAC2BA,GACnC,8EAENV,KAAMA,EACNC,KAAMU,GAPDF,EAFC,KAcf,E,SCpBD,EAAuB,mBC6CvB,EArCc,WACZ,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,oGAEnBJ,GAAa,GAFM,UAGEK,EAAAA,EAAAA,GAAUX,GAHZ,UAIE,KADfY,EAHa,QAITC,OAJS,iDAOM,IAAhBV,EAAKU,QACZT,EAAQQ,GARS,0DAWnBJ,GAAY,GACZM,IAAAA,OAAAA,QAAA,4CACyCP,EADzC,6BAZmB,yBAgBnBD,GAAa,GAhBM,6EAAH,qDAmBpBI,GACD,GAAE,CAACV,EAASO,EAAUJ,KAGrB,2BACGA,EAAKU,OAAO,GAAE,SAACnB,EAAD,CAAeC,KAAMQ,KAAU,gBAAKb,UAAWC,EAAhB,SAA0B,wDACvEc,IAAa,SAACU,EAAA,EAAD,MAGnB,C","sources":["webpack://react-homework-template/./src/components/MovieCast/MovieCastList.module.css?0fda","webpack://react-homework-template/./src/components/MovieCast/MovieCastItem.module.css?7bde","components/MovieCast/MovieCastItem.jsx","components/MovieCast/MovieCastList.jsx","webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieCastList_list__cUZEf\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieCastItem_item__FEb0d\",\"img\":\"MovieCastItem_img__ur2JC\",\"info\":\"MovieCastItem_info__ziQMT\"};","import css from './MovieCastItem.module.css';\n\nexport const MovieCastItem = ({ image, name, role }) => {\n  return (\n    <li className={css.item}>\n      <img className={css.img} src={image} alt={name} />\n      <div className={css.info}>\n        <p className={css.title}>Name: {name}</p>\n        <p className={css.role}>Character: {role}</p>\n      </div>\n    </li>\n  );\n};\n","import css from './MovieCastList.module.css';\n\nimport { MovieCastItem } from './MovieCastItem';\n\nexport const MovieCastList = ({ data }) => {\n  return (\n    <ul className={css.list}>\n      {data.map(({ id, profile_path, name, character }) => (\n        <MovieCastItem\n          key={id}\n          image={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n              : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n          }\n          name={name}\n          role={character}\n        />\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__YOhg9\"};","import { fetchCast } from 'api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n\nimport { MovieCastList } from 'components/MovieCast/MovieCastList';\nimport { Loader } from 'components/Loader/Loader';\nimport css from \"./Cast.module.css\"\n\n const Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [apiError, setApiError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        const result = await fetchCast(movieId);\n        if(result.length === 0){\n            return\n          }\n        else if (cast.length === 0) {\n          setCast(result);\n        }\n      } catch (error) {\n        setApiError(true);\n        Notiflix.Notify.failure(\n            `Oops! Something went wrong! Error ${apiError} Try reloading the page!`\n          );\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId, apiError, cast]);\n\n  return (\n    <div>\n      {cast.length>0?<MovieCastList data={cast} />: <div className={css.cast}>Sorry! We couldn't find any actors from this movie!</div> }\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Cast"],"names":["MovieCastItem","image","name","role","className","css","src","alt","MovieCastList","data","map","id","profile_path","character","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","apiError","setApiError","useEffect","fetchMovieCast","fetchCast","result","length","Notiflix","Loader"],"sourceRoot":""}